version: '3.8'

services:
  post-collector:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /app
    ports:
      - "8080:8080"
    env_file:
      - .env
    environment:
     GOCACHE: /go-cache
    entrypoint: ["docker/dev/entrypoint.sh", "./cmd/main.go", "grpc-server1"]


  post-service:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /app
    ports:
      - "8081:8081"
    env_file:
      - .env
    environment:
      GOCACHE: /go-cache
    entrypoint: ["docker/dev/entrypoint.sh", "./cmd/main.go", "grpc-server2"]

  api-gateway:
    build:
      context: .
      dockerfile: docker/dev/Dockerfile
    volumes:
      - .:/app
      - ./.go/pkg:/go/pkg
      - ./.go-cache:/go-cache
    working_dir: /app
    ports:
      - "8082:8082"
    env_file:
      - .env
    environment:
      GOCACHE: /go-cache
    entrypoint: ["docker/dev/entrypoint.sh", "./cmd/main.go", "api-gateway"]


  migrate:
    image: migrate/migrate
    volumes:
      - .:/app
    working_dir: /app
    env_file:
      - .env
    profiles:
      - donotstart

  db:
    image: postgres:latest
    environment:
      POSTGRES_DB: test_database
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432"
